# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Long term supported versions
        java-version: [11, 17, 21]

        # TODO Add support for 8, but it fails with
        # java.lang.UnsupportedClassVersionError: com/spotify/fmt/FMT has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0

        # TODO Should we test locales? The old travis setup did, see:
        # https://github.com/bramp/ffmpeg-cli-wrapper/pull/55

    name: JDK ${{ matrix.java-version }}
        
    steps:
    - uses: actions/checkout@v3

    - name: Set up FFmpeg
      uses: FedericoCarboni/setup-ffmpeg@v3
      id: setup-ffmpeg
      with:
        ffmpeg-version: release

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven

    - name: Compile with Maven
      run: mvn --batch-mode --update-snapshots compile

    - name: Test with Maven, Package and Verify with Maven
      run: mvn --batch-mode --update-snapshots verify -Dgpg.skip

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
